// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Post = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Post'
  title: string
  excerpt: string
  featuredImage: string
  date: IsoDateTimeString
  updated?: IsoDateTimeString | undefined
  tags?: string[] | undefined
  category?: 'Guide' | 'Tutorial' | undefined
  /** MDX file body */
  body: MDX
  url: string
}

export type Project = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Project'
  title: string
  client: string
  year: number
  featuredImage: string
  category?: string[] | undefined
  tags?: string[] | undefined
  images?: ProjectImage[] | undefined
  updated?: IsoDateTimeString | undefined
  /** MDX file body */
  body: MDX
  url: string
}  

/** Nested types */
export type ProjectImage = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'ProjectImage'
  imageUrl: string
  title?: string | undefined
  alt?: string | undefined

}  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Post | Project
export type DocumentTypeNames = 'Post' | 'Project'

export type NestedTypes = ProjectImage
export type NestedTypeNames = 'ProjectImage'

export type DataExports = {
  allDocuments: DocumentTypes[]
  allProjects: Project[]
  allPosts: Post[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Post: Post
  Project: Project
}

export type NestedTypeMap = {
  ProjectImage: ProjectImage
}

 